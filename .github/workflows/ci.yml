name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest

    steps:
      # Init
      - name: 'Init: Checkout code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: 'Init: Node.js'
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm
      - name: 'Init: Node Install Dependencies'
        run: npm ci

      # Checks
      - name: 'Check: Format files'
        run: npm run format:check
      - name: 'Check: Lint'
        run: npm run lint
      - name: 'Check: Test & Coverage'
        run: npm run ci-test

      # SonarQube
      - name: 'SonarQube: Setup'
        uses: SylvainDumas/setup-sonar-scanner@v1
      - name: 'SonarQube: Prepare'
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: echo "SONAR_OPTS=-Dsonar.branch.name=${{ github.ref_name }}" >> "$GITHUB_ENV"
      - name: 'SonarQube: Scan'
        env:
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL || 'https://sonarcloud.io' }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: sonar-scanner
          -Dsonar.host.url="$SONAR_HOST_URL"
          -Dsonar.token="$SONAR_TOKEN"
          ${{ env.SONAR_OPTS }}

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ['4.8.1.3023', '5.0.1.3006', '6.2.1.4610', '7.0.2.4839', 'latest', '>=6 <6.2']

    steps:
      # Init
      - name: 'Init: Checkout code'
        uses: actions/checkout@v4

      # Test
      - name: 'Test Local Action with CLI Version ${{ matrix.version }}'
        uses: ./
        with:
          version: ${{ matrix.version }}
